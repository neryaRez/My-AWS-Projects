Resources:
  MyVPCAFB07A31:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: EfStack/MyVPC
    Metadata:
      aws:cdk:path: EfStack/MyVPC/Resource
  MyVPCpublicSubnet1Subnet0B09E184:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: EfStack/MyVPC/publicSubnet1
      VpcId:
        Ref: MyVPCAFB07A31
    Metadata:
      aws:cdk:path: EfStack/MyVPC/publicSubnet1/Subnet
  MyVPCpublicSubnet1RouteTableF452D270:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: EfStack/MyVPC/publicSubnet1
      VpcId:
        Ref: MyVPCAFB07A31
    Metadata:
      aws:cdk:path: EfStack/MyVPC/publicSubnet1/RouteTable
  MyVPCpublicSubnet1RouteTableAssociation61BB7007:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyVPCpublicSubnet1RouteTableF452D270
      SubnetId:
        Ref: MyVPCpublicSubnet1Subnet0B09E184
    Metadata:
      aws:cdk:path: EfStack/MyVPC/publicSubnet1/RouteTableAssociation
  MyVPCpublicSubnet1DefaultRoute064E2CB1:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: MyVPCIGW30AB6DD6
      RouteTableId:
        Ref: MyVPCpublicSubnet1RouteTableF452D270
    DependsOn:
      - MyVPCVPCGWE6F260E1
    Metadata:
      aws:cdk:path: EfStack/MyVPC/publicSubnet1/DefaultRoute
  MyVPCpublicSubnet2SubnetF1A4E852:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: EfStack/MyVPC/publicSubnet2
      VpcId:
        Ref: MyVPCAFB07A31
    Metadata:
      aws:cdk:path: EfStack/MyVPC/publicSubnet2/Subnet
  MyVPCpublicSubnet2RouteTableD03A1158:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: EfStack/MyVPC/publicSubnet2
      VpcId:
        Ref: MyVPCAFB07A31
    Metadata:
      aws:cdk:path: EfStack/MyVPC/publicSubnet2/RouteTable
  MyVPCpublicSubnet2RouteTableAssociationE1106DF5:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyVPCpublicSubnet2RouteTableD03A1158
      SubnetId:
        Ref: MyVPCpublicSubnet2SubnetF1A4E852
    Metadata:
      aws:cdk:path: EfStack/MyVPC/publicSubnet2/RouteTableAssociation
  MyVPCpublicSubnet2DefaultRoute0CED5BC7:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: MyVPCIGW30AB6DD6
      RouteTableId:
        Ref: MyVPCpublicSubnet2RouteTableD03A1158
    DependsOn:
      - MyVPCVPCGWE6F260E1
    Metadata:
      aws:cdk:path: EfStack/MyVPC/publicSubnet2/DefaultRoute
  MyVPCIGW30AB6DD6:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: EfStack/MyVPC
    Metadata:
      aws:cdk:path: EfStack/MyVPC/IGW
  MyVPCVPCGWE6F260E1:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId:
        Ref: MyVPCIGW30AB6DD6
      VpcId:
        Ref: MyVPCAFB07A31
    Metadata:
      aws:cdk:path: EfStack/MyVPC/VPCGW
  MyVPCRestrictDefaultSecurityGroupCustomResourceC3FF5EE0:
    Type: Custom::VpcRestrictDefaultSG
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E
          - Arn
      DefaultSecurityGroupId:
        Fn::GetAtt:
          - MyVPCAFB07A31
          - DefaultSecurityGroup
      Account:
        Ref: AWS::AccountId
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: EfStack/MyVPC/RestrictDefaultSecurityGroupCustomResource/Default
  CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: Inline
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ec2:AuthorizeSecurityGroupIngress
                  - ec2:AuthorizeSecurityGroupEgress
                  - ec2:RevokeSecurityGroupIngress
                  - ec2:RevokeSecurityGroupEgress
                Resource:
                  - Fn::Join:
                      - ""
                      - - "arn:"
                        - Ref: AWS::Partition
                        - ":ec2:"
                        - Ref: AWS::Region
                        - ":"
                        - Ref: AWS::AccountId
                        - :security-group/
                        - Fn::GetAtt:
                            - MyVPCAFB07A31
                            - DefaultSecurityGroup
    Metadata:
      aws:cdk:path: EfStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role
  CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 7fa1e366ee8a9ded01fc355f704cff92bfd179574e6f9cfee800a3541df1b200.zip
      Timeout: 900
      MemorySize: 128
      Handler: __entrypoint__.handler
      Role:
        Fn::GetAtt:
          - CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0
          - Arn
      Runtime: nodejs22.x
      Description: Lambda function for removing all inbound/outbound rules from the VPC default security group
    DependsOn:
      - CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0
    Metadata:
      aws:cdk:path: EfStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler
      aws:asset:path: asset.7fa1e366ee8a9ded01fc355f704cff92bfd179574e6f9cfee800a3541df1b200
      aws:asset:property: Code
  InstanceSG2AE1100C:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP, SSH, HTTPS access
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: SSH
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
        - CidrIp: 0.0.0.0/0
          Description: HTTP
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
        - CidrIp: 0.0.0.0/0
          Description: HTTPS
          FromPort: 443
          IpProtocol: tcp
          ToPort: 443
      VpcId:
        Ref: MyVPCAFB07A31
    Metadata:
      aws:cdk:path: EfStack/InstanceSG/Resource
  MyEFS:
    Type: AWS::EFS::FileSystem
    Properties:
      Encrypted: false
      LifecyclePolicies:
        - TransitionToIA: AFTER_7_DAYS
      PerformanceMode: generalPurpose
    Metadata:
      aws:cdk:path: EfStack/MyEFS
  EfsMountTarget1:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId:
        Ref: MyEFS
      SecurityGroups:
        - Fn::GetAtt:
            - InstanceSG2AE1100C
            - GroupId
      SubnetId:
        Ref: MyVPCpublicSubnet1Subnet0B09E184
    Metadata:
      aws:cdk:path: EfStack/EfsMountTarget1
  EfsMountTarget2:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId:
        Ref: MyEFS
      SecurityGroups:
        - Fn::GetAtt:
            - InstanceSG2AE1100C
            - GroupId
      SubnetId:
        Ref: MyVPCpublicSubnet2SubnetF1A4E852
    Metadata:
      aws:cdk:path: EfStack/EfsMountTarget2
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/9VTTW/bMAz9LdWxULw2BXrIzfWwzsCKBHHQw4JgkGXG0SJTnkQl8wz/90H+aNb+guwk6vHxgaSe5tH87j66uxFnN5PFcaZVHrUZCXnk4ux+tCDnUftay23LAEWu4TO6r8YRigocW5D1wC+ZzNe1sTThlfgd/3FswW4ZZyjoWRCcRTMhzucIlBjcq9JbQcogW2xbFrTfUTZNHYCVz7WSjDOpCvsi3LEndbtux5M9vq4SPjCyvmjbMnESSotcaUXNd4OT6KmWaTHGQepJG3kc75WoB5G0XuI34VEepmlUfXpMPtCFc6rEtD49xkVhwbklJhbGUUJz/Eq6uJpGrqOLwTKDUUK0Np5gE1x8wS9Y7JyRqhd4I4cgRQKLMPl6dOF4i4mEPFSAxDOQ3ipqnq3x9bYNs06tam3OsdZLT7nxWExjFeCkVfX7xRVFimWYZ+019D9FCkxRK4QBGWqlQQQZSqeP5lH98jCutzdDD9+y3X+nO7zbv/vsOOxd1CZ7/KI0ZI0jqALpxXikjbAlUNfxNTjjrYTtjifekanegCDbv+oIfMivrDmpAuyTcMBj54AyEqXCMtQsPdWeOr5q6GDw00N0P48ebn46pWbWI6kKovVw/gW4rayZaAUAAA==
    Metadata:
      aws:cdk:path: EfStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  VPCId:
    Value:
      Ref: MyVPCAFB07A31
    Export:
      Name: EfsStack-VPCId
  Subnet1:
    Value:
      Ref: MyVPCpublicSubnet1Subnet0B09E184
    Export:
      Name: EfsStack-Subnet1
  Subnet2:
    Value:
      Ref: MyVPCpublicSubnet2SubnetF1A4E852
    Export:
      Name: EfsStack-Subnet2
  EfsId:
    Value:
      Ref: MyEFS
    Export:
      Name: EfsStack-EfsId
  EfsDns:
    Value:
      Fn::Join:
        - ""
        - - Ref: MyEFS
          - .efs.
          - Ref: AWS::Region
          - .amazonaws.com
    Export:
      Name: EfsStack-EfsDns
  SecurityGroupId:
    Value:
      Fn::GetAtt:
        - InstanceSG2AE1100C
        - GroupId
    Export:
      Name: EfsStack-SecurityGroupId
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-3
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-3
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-4
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - il-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - me-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
      - Fn::Equals:
          - Ref: AWS::Region
          - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]

